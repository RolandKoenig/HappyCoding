// <auto-generated />
using System;
using HappyCoding.EFCoreQueryTagging;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HappyCoding.EFCoreQueryTagging.Migrations
{
    [DbContext(typeof(TestingDBContext))]
    partial class TestingDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("HappyCoding.EFCoreQueryTagging.Model.Procedure", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTimestampUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Field1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Field2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Field3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Field4")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Field5")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("Field6")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Procedure", (string)null);
                });

            modelBuilder.Entity("HappyCoding.EFCoreQueryTagging.Model.ProcedureActivity", b =>
                {
                    b.Property<long>("ProcessActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ActivityTimestampUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Field1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Field2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Field3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Field4")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Field5")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("Field6")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcessID")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("ProcessActivityID");

                    b.HasIndex("ProcessID");

                    b.ToTable("ProcedureActivity", (string)null);
                });

            modelBuilder.Entity("HappyCoding.EFCoreQueryTagging.Model.ProcedureActivity", b =>
                {
                    b.HasOne("HappyCoding.EFCoreQueryTagging.Model.Procedure", null)
                        .WithMany("Activities")
                        .HasForeignKey("ProcessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HappyCoding.EFCoreQueryTagging.Model.Procedure", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
