// <auto-generated />
using System;
using HappyCoding.EFCoreWithBulkExtensions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HappyCoding.EFCoreWithBulkExtensions.Migrations
{
    [DbContext(typeof(TestingDBContext))]
    partial class TestingDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HappyCoding.EFCoreWithBulkExtensions.Model.Order", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HappyCoding.EFCoreWithBulkExtensions.Model.OrderPosition", b =>
                {
                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<string>("ArticleNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("OrderID", "PositionID");

                    b.ToTable("OrderPositions");
                });

            modelBuilder.Entity("HappyCoding.EFCoreWithBulkExtensions.Model.OrderPosition", b =>
                {
                    b.HasOne("HappyCoding.EFCoreWithBulkExtensions.Model.Order", "Order")
                        .WithMany("Positions")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("HappyCoding.EFCoreWithBulkExtensions.Model.Order", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
